I"<p><img src="images/ESP32-Alarm-System-Schematic.png" /></p>

<h2 id="what-you-will-need">What you will need</h2>
<ul>
  <li>ESP32 Development board. There are many variants available but make sure GPIO pins 16 (TX2) and 17 (RX2) (Serial Port 2) are exposed. The ESP32 has two hardware serial ports and we will be using Serial Port 2 to connect the Flex RF module, so that you can use Serial Port 1 for debugging.</li>
  <li>Micro USB to USB 2.0 connector to connect the ESP32 to a PC</li>
  <li>A PC is required to load firmware on the ESP32. We will be using the Arduino IDE that has client available for Windows, Mac or Linux.</li>
  <li>Arduino ESP32 development environment setup (covered in the <a href="esp32-install.html">previous tutorial</a>)</li>
</ul>

<h2 id="what-you-need-to-know">What you need to know</h2>
<ul>
  <li>Some basic low voltage electrical experience is advantageous but not necessary. The electrical construction is very basic and could be achieved with no knowledge of electronics.</li>
  <li>Some basic programming knowledge and prior experience with the Arduino IDE. Again not absolutely necessary but it will make the learning curve a bit easier.</li>
</ul>

<h2 id="step-1---install-and-configure-the-arduino-integrated-development-environment">Step 1 - Install and configure the Arduino Integrated Development Environment</h2>

<p><br /></p>
<p style="text-align: left"><a href="esp32-install.html">&lt;- Back</a></p>
<p style="text-align: right"><a href=" esp32-temperature.html">Next - Build Temperature Monitor -&gt;</a></p>
:ET